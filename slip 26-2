import java.io.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter; 
import java.util.ArrayList; 
class Donor implements Serializable { 
    String name; 
    int age; 
    String address; 
    String contactnumber; 
    String bloodgroup; 
    String dateOfLastDonation; 
    Donor(String name, int age, String address, String contactnumber, String bloodgroup, 
String dateOfLastDonation) { 
        this.name = name; 
        this.age = age; 
        this.address = address; 
        this.contactnumber = contactnumber; 
        this.bloodgroup = bloodgroup; 
        this.dateOfLastDonation = dateOfLastDonation; 
    } 
    void display() { 
        System.out.println("Name: " + name); 
        System.out.println("Age: " + age); 
        System.out.println("Address: " + address); 
        System.out.println("Contact: " + contactnumber); 
        System.out.println("Blood Group: " + bloodgroup); 
        System.out.println("Last Donation Date: " + dateOfLastDonation); 
        System.out.println(); 
    } 
} 
public class DonorManager { 
    static final String filename = "donors.dat"; 
    static void writeDonorsToFile(ArrayList<Donor> donors) throws IOException { 
        ObjectOutputStream oos = new ObjectOutputStream(new 
FileOutputStream(filename)); 
        for (Donor d : donors) { 
            oos.writeObject(d); 
        } 
        oos.close(); 
    } 
 
 
    static ArrayList<Donor> readDonorsFromFile() throws IOException, 
ClassNotFoundException { 
        ArrayList<Donor> donors = new ArrayList<>(); 
        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filename)); 
        try { 
            while (true) { 
                Donor donor = (Donor) ois.readObject(); 
                donors.add(donor); 
            } 
        } catch (EOFException e) { 
            ois.close(); 
        } 
        return donors; 
    } 
    static boolean isMoreThanSixMonths(String dateStr) { 
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd"); 
        LocalDate lastDonation = LocalDate.parse(dateStr, formatter); 
        LocalDate sixMonthsAgo = LocalDate.now().minusMonths(6); 
        return lastDonation.isBefore(sixMonthsAgo); 
    } 
    public static void main(String[] args) throws Exception { 
        ArrayList<Donor> donors = new ArrayList<>(); 
        donors.add(new Donor("Ramesh", 30, "Pune", "1234567890", "A+ve", "2025-01-10")); 
        donors.add(new Donor("Suresh", 35, "Pune", "0987654321", "B+ve", "2025-04-15")); 
        donors.add(new Donor("Mahesh", 28, "Pune", "1122334455", "A+ve", "2024-12-01")); 
        donors.add(new Donor("Ganesh", 40, "Pune", "5566778899", "O+ve", "2025-07-01")); 
        writeDonorsToFile(donors); 
        ArrayList<Donor> readDonors = readDonorsFromFile(); 
 
        for (Donor d : readDonors) { 
            if (d.bloodgroup.equals("A+ve") && 
isMoreThanSixMonths(d.dateOfLastDonation)) { 
                d.display(); 
            } 
        } 
    } 
} 
